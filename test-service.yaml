Description: >
  Create ECS Service for Deployment on ECS.

Parameters:
  DesiredCount:
    Type: Number
    Default: 0

  VpcId:
    Type: AWS::EC2::VPC::Id

  Cluster:
    Type: String

  LoadBalancer:
    Type: String

  Repository:
    Type: String

  Tag:
    Type: String
    Default: latest

  Port:
    Type: Number

  Identifier:
    Type: String

  IsProduction:
    Type: String

  DBAddress:
    Type: String

  DBPassword:
    Type: String

  HostedZoneName:
    Type: String

  Hostname:
    Type: String

  CloudwatchLogsGroup:
    Type: String

  certificateArn:
    Type: String

  clientId:
    Type: String

  clientSecret:
    Type: String

  lexBotName:
    Type: String

Resources:

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Certificates:
        - CertificateArn: !Ref certificateArn
      Port: !Ref Port
      Protocol: HTTPS
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId: !Ref VpcId
      Port: !Ref Port
      Protocol: HTTP
      Matcher:
        HttpCode: 302
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /login
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 20
      Tags:
        - Key: Identifier
          Value: !Ref Identifier
        - Key: Image
          Value: !Ref Tag
        - Key: IsProduction
          Value: !Ref IsProduction

  ListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      Conditions:
        - Field: path-pattern
          Values:
          - "*"
      ListenerArn: !Ref LoadBalancerListener
      Priority: 1

  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      #RoleName: !Sub ecs-service-${AWS::StackName}
      Path: /
      AssumeRolePolicyDocument: |
        {
            "Statement": [{
                "Effect": "Allow",
                "Principal": { "Service": [ "ecs.amazonaws.com" ]},
                "Action": [ "sts:AssumeRole" ]
            }]
        }
      Policies:
        - PolicyName: ecs-service-role
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - ec2:*
                  - ecs:*
                  - elasticloadbalancing:DeregisterInstancesFromLoadBalancer
                  - elasticloadbalancing:DeregisterTargets
                  - elasticloadbalancing:RegisterTargets
                  - elasticloadbalancing:Describe*
                  - elasticloadbalancing:RegisterInstancesWithLoadBalancer
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - lex:*

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref Cluster
      Role: !Ref ECSServiceRole
      DesiredCount: !Ref DesiredCount
      TaskDefinition: !Ref TaskDefinition
      LoadBalancers:
        - ContainerName: !Ref Hostname
          ContainerPort: !Ref Port
          TargetGroupArn: !Ref TargetGroup

  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      #Family: !Sub ${AWS::StackName}-simple-app
      ContainerDefinitions:
        - Name: !Ref Hostname
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${Repository}:${Tag}
          Essential: true
          Memory: 64
          PortMappings:
            - ContainerPort: !Ref Port
          Environment:
            - Name: Tag
              Value: !Ref Tag
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudwatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: !Ref Hostname
          Environment:
            - Name: PORT
              Value: !Ref Port
            - Name: clientId
              Value: !Sub "${clientId}"
            - Name: clientSecret
              Value: !Sub "${clientSecret}"
            - Name: oauthRedirectUri
              Value: !Sub https://${Hostname}.${HostedZoneName}/oauth
            - Name: studio_token
              Value: studiotokenexamplecharacters
            - Name: DBconnection
              Value: !Ref DBAddress
            - Name: DBpassword
              Value: !Ref DBPassword
            - Name: lex_bot_name
              Value: !Ref lexBotName

